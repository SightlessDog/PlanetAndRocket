/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import {useFrame } from "@react-three/fiber"


export default function Rocket({ ...props }) {
  const group = useRef()
  const [hovered, hover] = useState(false)
  useFrame((state, delta) => {
    if (hovered) return; 
    group.current.rotation.x += 0.01;
  })
  const { nodes, materials } = useGLTF('/Rocket.glb')

  const handleClick = () => {
    window.location.replace("https://www.google.com") 
  }
  return (
    <group ref={group} {...props} dispose={null} >
      <mesh geometry={nodes.Sphere.geometry} material={materials['Material.001']} position={[0, 15, 2]} scale={hovered ? 2 : 1}
       onPointerOver={(e) => hover(true)} onPointerOut={(e) => hover(false)} onClick={(e) => handleClick()} castShadow>
        <mesh
          geometry={nodes.Cube001.geometry}
          material={nodes.Cube001.material}
          position={[0, -0.97, 0]}
          rotation={[-Math.PI, Math.PI / 4, -Math.PI]}
        />
        <mesh geometry={nodes.Cylinder.geometry} material={materials['Material.007']} position={[0, -1.1, 0]} />
        <group position={[0.75, 0, 0]} rotation={[0, 0, -Math.PI / 2]} scale={[0.49, 0.15, 0.49]}>
          <mesh geometry={nodes.Cylinder001_1.geometry} material={nodes.Cylinder001_1.material} />
          <mesh geometry={nodes.Cylinder001_2.geometry} material={nodes.Cylinder001_2.material} />
        </group>
        <group position={[0.61, 0.9, 0]} rotation={[0, 0, -1.26]} scale={[0.36, 0.11, 0.36]}>
          <mesh geometry={nodes.Cylinder001_1.geometry} material={nodes.Cylinder001_1.material} />
          <mesh geometry={nodes.Cylinder001_2.geometry} material={nodes.Cylinder001_2.material} />
        </group>
        <mesh geometry={nodes.Cylinder003.geometry} material={nodes.Cylinder003.material} position={[0, 1.77, 0]} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/Rocket.glb')
